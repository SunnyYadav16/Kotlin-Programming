package com.example.grocerylist

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.material3.Button
import androidx.compose.material3.Text
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.unit.dp
import com.example.grocerylist.ui.theme.GroceryListTheme

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContent {
            GroceryListTheme {

                var sItems by remember { mutableStateOf(listOf<ShoppingItemData>()) }

                Column(
                    modifier = Modifier.fillMaxSize().padding(50.dp),
                    verticalArrangement = Arrangement.Center
                ) {
                    Button(
                        onClick = { /*TODO*/ },
                        modifier = Modifier.align(Alignment.CenterHorizontally)
                    ) {
                        Text(text = "Add Items")
                    }

                    LazyColumn (
                        modifier = Modifier.fillMaxSize().padding(16.dp)
                    ) {

                    }
                }
            }
        }
    }
}


data class ShoppingItemData(
    var id : Int,
    var name : String,
    var quantity : Int,
    var isEditing : Boolean = false
) {}



// LAZY Column - only display some amount of data on the screen.
// Column - load everything at once on to the screen.


// Data class - special type of class used to hold the data
// 1. toString()
// 2. copy()
// 3. equals()


// Data class
// AlertDialogs - Different use
// LISTS
// LAMBDA EXP



//grocery list / shopping list
//
//        button - add items
//
//        enter name of the item,
//        enter the quantity of the item
//        buttons - add/submit , cancel
//
//
//        View data in list format
//        ItemName Quantity (Button1 - edit, Button2 - delete)
//          Editable format - Name and Qty

