package com.example.currencyconverter

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.width
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.KeyboardArrowDown
import androidx.compose.material3.Button
import androidx.compose.material3.DropdownMenu
import androidx.compose.material3.DropdownMenuItem
import androidx.compose.material3.Icon
import androidx.compose.material3.OutlinedTextField
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import com.example.currencyconverter.ui.theme.CurrencyConverterTheme


class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContent {
            CurrencyConverterTheme {
                Scaffold(modifier = Modifier.fillMaxSize()) { innerPadding ->

                    CurrencyConverter(modifier = Modifier.padding(innerPadding))
                }
            }
        }
    }
}


@Composable
fun CurrencyConverter(modifier: Modifier = Modifier) {

    Column(
        modifier = modifier.fillMaxSize(),
        verticalArrangement = Arrangement.Center,
        horizontalAlignment = Alignment.CenterHorizontally
    ) {
        // Stack the data or elements on top of each other

        Text(text = "Currency Converter", modifier = modifier)

        Spacer(modifier = Modifier.height(16.dp))
        
        OutlinedTextField(
            value = "",
            onValueChange = {},
            placeholder = { Text(text = "Enter value")}
        )

        Spacer(modifier = Modifier.height(16.dp))

        Row {
            // Stack the data after one another

            Box { // layout element to structure the elements
                Button(onClick = { /*TODO*/ }) {
                    Text(text = "Button 1")
                    Icon(
                        Icons.Default.KeyboardArrowDown,
                        contentDescription = "Button 1 Arrow Down"
                    )
                }

                DropdownMenu(expanded = true, onDismissRequest = { /*TODO*/ })
                {
                    DropdownMenuItem(
                        text = { Text(text = "INR") },
                        onClick = { /*TODO*/ }
                    )

                    DropdownMenuItem(
                        text = { Text(text = "USD") },
                        onClick = { /*TODO*/ }
                    )

                    DropdownMenuItem(
                        text = { Text(text = "Pound") },
                        onClick = { /*TODO*/ }
                    )

                    DropdownMenuItem(
                        text = { Text(text = "JPY") },
                        onClick = { /*TODO*/ }
                    )
                }
            }

            Spacer(modifier = Modifier.width(16.dp))

            Box {
                Button(onClick = { /*TODO*/ }) {
                    Text(text = "Button 2")
                    Icon(
                        Icons.Default.KeyboardArrowDown,
                        contentDescription = "Button 1 Arrow Down"
                    )
                }

                DropdownMenu(expanded = true, onDismissRequest = { /*TODO*/ })
                {
                    DropdownMenuItem(
                        text = { Text(text = "INR") },
                        onClick = { /*TODO*/ }
                    )

                    DropdownMenuItem(
                        text = { Text(text = "USD") },
                        onClick = { /*TODO*/ }
                    )

                    DropdownMenuItem(
                        text = { Text(text = "Pound") },
                        onClick = { /*TODO*/ }
                    )

                    DropdownMenuItem(
                        text = { Text(text = "JPY") },
                        onClick = { /*TODO*/ }
                    )
                }
            }
        }

        Spacer(modifier = Modifier.height(16.dp))
        Text(text = "Result : ")

    }
}


@Preview(showBackground = true)
@Composable
fun  CurrencyConverterPreview() {
    CurrencyConverter()
}


// Padding - use padding when adding space on single element
// Spacing - use spacing when adding space across multiple elements

// Modifier.padding()
// 1. start - to add padding on the left side of the element
// 2. end - to add padding on the right side of the element
// 3. top - to add padding on the top side of the element
// 4. bottom - to add padding on the bottom side of the element
// 5. vertical - (top + bottom) = to add padding on the top and bottom side of the element
// 6. horizontal - (start + end) = to add padding on the left and the right side of the element




